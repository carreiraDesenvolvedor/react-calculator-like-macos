{"ast":null,"code":"var _jsxFileName = \"/Volumes/jonathanhe/projects/myself/simple-react-calculator/src/main/Calculator.jsx\";\nimport React, { Component } from 'react';\nimport './Calculator.css';\nimport Button from '../components/button';\nimport Display from '../components/display';\nconst initialState = {\n  displayValue: '0',\n  clearDisplay: false,\n  operation: null,\n  values: [0, 0],\n  current: 0,\n  history: []\n};\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initialState\n    };\n\n    this.clearMemory = () => {\n      this.setState({ ...initialState\n      });\n    };\n\n    this.setOperation = operation => {\n      if (this.state.current === 0) {\n        this.setState({\n          operation,\n          current: 1,\n          clearDisplay: true\n        });\n      } else {\n        const equals = operation === '=';\n        const currentOperation = this.state.operation;\n        const values = [...this.state.values];\n\n        try {\n          values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`);\n        } catch (e) {\n          values[0] = this.state.values[0];\n        }\n\n        values[1] = 0;\n        this.setState({\n          displayValue: values[0],\n          operation: equals ? null : operation,\n          values,\n          current: equals ? 0 : 1,\n          clearDisplay: !equals\n        });\n      }\n\n      console.log(operation);\n    };\n\n    this.addDigit = digit => {\n      if (digit === '.' && this.state.displayValue.includes('.')) return;\n      const clearDisplay = this.state.displayValue === '0' || this.state.clearDisplay;\n      const currentValue = clearDisplay ? '' : this.state.displayValue;\n      const displayValue = currentValue + digit;\n      console.log(clearDisplay, displayValue);\n      this.setState({\n        displayValue,\n        clearDisplay: false\n      });\n\n      if (digit !== '.') {\n        const i = this.state.current;\n        const newValue = parseFloat(displayValue).toFixed(2);\n        const values = [...this.state.values];\n        values[i] = newValue;\n        this.setState({\n          values\n        });\n        console.log(values);\n      }\n\n      console.log(digit);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"calculator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Display, {\n      value: this.state.displayValue,\n      history: this.state.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Button, {\n      triple: true,\n      label: 'AC',\n      click: this.clearMemory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Button, {\n      operation: true,\n      label: '/',\n      click: this.setOperation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: '7',\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: '8',\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: '9',\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Button, {\n      operation: true,\n      label: '*',\n      click: this.setOperation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: '4',\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: '5',\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: '6',\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Button, {\n      operation: true,\n      label: '-',\n      click: this.setOperation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: '1',\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: '2',\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: '3',\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Button, {\n      operation: true,\n      label: '+',\n      click: this.setOperation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Button, {\n      double: true,\n      label: '0',\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: '.',\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Button, {\n      operation: true,\n      label: '=',\n      click: this.setOperation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Volumes/jonathanhe/projects/myself/simple-react-calculator/src/main/Calculator.jsx"],"names":["React","Component","Button","Display","initialState","displayValue","clearDisplay","operation","values","current","history","Main","state","clearMemory","setState","setOperation","equals","currentOperation","eval","e","console","log","addDigit","digit","includes","currentValue","i","newValue","parseFloat","toFixed","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,kBAAP;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAC,GADI;AAEjBC,EAAAA,YAAY,EAAC,KAFI;AAGjBC,EAAAA,SAAS,EAAE,IAHM;AAIjBC,EAAAA,MAAM,EAAE,CAAC,CAAD,EAAG,CAAH,CAJS;AAKjBC,EAAAA,OAAO,EAAC,CALS;AAMjBC,EAAAA,OAAO,EAAC;AANS,CAArB;AASA,eAAe,MAAMC,IAAN,SAAmBV,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAExCW,KAFwC,GAEhC,EAAC,GAAGR;AAAJ,KAFgC;;AAAA,SAIxCS,WAJwC,GAI1B,MAAM;AAChB,WAAKC,QAAL,CAAc,EAAC,GAAGV;AAAJ,OAAd;AACH,KANuC;;AAAA,SAQxCW,YARwC,GAQzBR,SAAS,IAAI;AAExB,UAAG,KAAKK,KAAL,CAAWH,OAAX,KAAuB,CAA1B,EAA4B;AAExB,aAAKK,QAAL,CAAc;AAACP,UAAAA,SAAD;AAAYE,UAAAA,OAAO,EAAE,CAArB;AAAwBH,UAAAA,YAAY,EAAE;AAAtC,SAAd;AAEH,OAJD,MAIK;AAED,cAAMU,MAAM,GAAGT,SAAS,KAAK,GAA7B;AAEA,cAAMU,gBAAgB,GAAG,KAAKL,KAAL,CAAWL,SAApC;AAEA,cAAMC,MAAM,GAAG,CAAC,GAAG,KAAKI,KAAL,CAAWJ,MAAf,CAAf;;AAEA,YAAG;AACCA,UAAAA,MAAM,CAAC,CAAD,CAAN,GAAYU,IAAI,CAAE,GAAEV,MAAM,CAAC,CAAD,CAAI,IAAGS,gBAAiB,IAAGT,MAAM,CAAC,CAAD,CAAI,EAA/C,CAAhB;AACH,SAFD,CAEC,OAAOW,CAAP,EAAS;AACNX,UAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,KAAKI,KAAL,CAAWJ,MAAX,CAAkB,CAAlB,CAAZ;AACH;;AAEDA,QAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,CAAZ;AAEA,aAAKM,QAAL,CAAc;AACVT,UAAAA,YAAY,EAAEG,MAAM,CAAC,CAAD,CADV;AAEVD,UAAAA,SAAS,EAAES,MAAM,GAAG,IAAH,GAAUT,SAFjB;AAGVC,UAAAA,MAHU;AAIVC,UAAAA,OAAO,EAACO,MAAM,GAAG,CAAH,GAAO,CAJX;AAKVV,UAAAA,YAAY,EAAE,CAACU;AALL,SAAd;AASH;;AAGDI,MAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AAEH,KA5CuC;;AAAA,SA8CxCe,QA9CwC,GA8C7BC,KAAK,IAAI;AAEhB,UAAGA,KAAK,KAAK,GAAV,IAAiB,KAAKX,KAAL,CAAWP,YAAX,CAAwBmB,QAAxB,CAAiC,GAAjC,CAApB,EACI;AAEJ,YAAMlB,YAAY,GAAG,KAAKM,KAAL,CAAWP,YAAX,KAA4B,GAA5B,IAAmC,KAAKO,KAAL,CAAWN,YAAnE;AAEA,YAAMmB,YAAY,GAAGnB,YAAY,GAAG,EAAH,GAAQ,KAAKM,KAAL,CAAWP,YAApD;AAEA,YAAMA,YAAY,GAAGoB,YAAY,GAAGF,KAApC;AAEAH,MAAAA,OAAO,CAACC,GAAR,CAAYf,YAAZ,EAA0BD,YAA1B;AAEA,WAAKS,QAAL,CAAc;AACVT,QAAAA,YADU;AAEVC,QAAAA,YAAY,EAAE;AAFJ,OAAd;;AAKA,UAAGiB,KAAK,KAAK,GAAb,EAAiB;AAEb,cAAMG,CAAC,GAAG,KAAKd,KAAL,CAAWH,OAArB;AACA,cAAMkB,QAAQ,GAAGC,UAAU,CAACvB,YAAD,CAAV,CAAyBwB,OAAzB,CAAiC,CAAjC,CAAjB;AACA,cAAMrB,MAAM,GAAG,CAAC,GAAG,KAAKI,KAAL,CAAWJ,MAAf,CAAf;AACAA,QAAAA,MAAM,CAACkB,CAAD,CAAN,GAAYC,QAAZ;AACA,aAAKb,QAAL,CAAc;AAACN,UAAAA;AAAD,SAAd;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AACH;;AAGDY,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KA5EuC;AAAA;;AA8ExCO,EAAAA,MAAM,GAAE;AAEJ,WAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWP,YAA3B;AAAyC,MAAA,OAAO,EAAE,KAAKO,KAAL,CAAWF,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII,oBAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,KAAK,EAAE,IAAtB;AAA4B,MAAA,KAAK,EAAE,KAAKG,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAMI,oBAAC,MAAD;AAAQ,MAAA,SAAS,MAAjB;AAAkB,MAAA,KAAK,EAAE,GAAzB;AAA8B,MAAA,KAAK,EAAE,KAAKE,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAQI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,GAAf;AAAoB,MAAA,KAAK,EAAE,KAAKO,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EASI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,GAAf;AAAoB,MAAA,KAAK,EAAE,KAAKA,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAUI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,GAAf;AAAoB,MAAA,KAAK,EAAE,KAAKA,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAYI,oBAAC,MAAD;AAAQ,MAAA,SAAS,MAAjB;AAAkB,MAAA,KAAK,EAAE,GAAzB;AAA8B,MAAA,KAAK,EAAE,KAAKP,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EAcI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,GAAf;AAAoB,MAAA,KAAK,EAAE,KAAKO,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,EAeI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,GAAf;AAAoB,MAAA,KAAK,EAAE,KAAKA,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,EAgBI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,GAAf;AAAoB,MAAA,KAAK,EAAE,KAAKA,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,EAkBI,oBAAC,MAAD;AAAQ,MAAA,SAAS,MAAjB;AAAkB,MAAA,KAAK,EAAE,GAAzB;AAA8B,MAAA,KAAK,EAAE,KAAKP,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,EAoBI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,GAAf;AAAoB,MAAA,KAAK,EAAE,KAAKO,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,EAqBI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,GAAf;AAAoB,MAAA,KAAK,EAAE,KAAKA,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBJ,EAsBI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,GAAf;AAAoB,MAAA,KAAK,EAAE,KAAKA,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBJ,EAwBI,oBAAC,MAAD;AAAQ,MAAA,SAAS,MAAjB;AAAkB,MAAA,KAAK,EAAE,GAAzB;AAA8B,MAAA,KAAK,EAAE,KAAKP,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBJ,EA0BI,oBAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,KAAK,EAAE,GAAtB;AAA2B,MAAA,KAAK,EAAE,KAAKO,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BJ,EA2BI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,GAAf;AAAoB,MAAA,KAAK,EAAE,KAAKA,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BJ,EA6BI,oBAAC,MAAD;AAAQ,MAAA,SAAS,MAAjB;AAAkB,MAAA,KAAK,EAAE,GAAzB;AAA8B,MAAA,KAAK,EAAE,KAAKP,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BJ,CAFJ;AAqCH;;AArHuC","sourcesContent":["import React, {Component} from 'react'\nimport './Calculator.css'\n\nimport Button from '../components/button'\nimport Display from '../components/display'\n\nconst initialState = {\n    displayValue:'0',\n    clearDisplay:false,\n    operation: null,\n    values: [0,0],\n    current:0,\n    history:[]\n}\n\nexport default class Main extends Component {\n\n    state = {...initialState}\n\n    clearMemory = () => {\n        this.setState({...initialState})\n    }\n\n    setOperation = operation => {\n\n        if(this.state.current === 0){\n\n            this.setState({operation, current: 1, clearDisplay: true})\n\n        }else{\n\n            const equals = operation === '='\n\n            const currentOperation = this.state.operation\n\n            const values = [...this.state.values]\n\n            try{\n                values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`)\n            }catch (e){\n                values[0] = this.state.values[0]\n            }\n\n            values[1] = 0\n\n            this.setState({\n                displayValue: values[0],\n                operation: equals ? null : operation,\n                values,\n                current:equals ? 0 : 1,\n                clearDisplay: !equals\n\n            })\n\n        }\n\n\n        console.log(operation)\n\n    }\n\n    addDigit = digit => {\n\n        if(digit === '.' && this.state.displayValue.includes('.'))\n            return\n\n        const clearDisplay = this.state.displayValue === '0' || this.state.clearDisplay\n\n        const currentValue = clearDisplay ? '' : this.state.displayValue\n\n        const displayValue = currentValue + digit\n\n        console.log(clearDisplay, displayValue)\n\n        this.setState({\n            displayValue,\n            clearDisplay: false\n        })\n\n        if(digit !== '.'){\n\n            const i = this.state.current\n            const newValue = parseFloat(displayValue).toFixed(2)\n            const values = [...this.state.values]\n            values[i] = newValue\n            this.setState({values})\n            console.log(values)\n        }\n\n\n        console.log(digit)\n    }\n\n    render(){\n\n        return (\n\n            <div className=\"calculator\">\n\n                <Display value={this.state.displayValue} history={this.state.history} />\n\n                <Button triple label={'AC'} click={this.clearMemory}/>\n\n                <Button operation label={'/'} click={this.setOperation} />\n\n                <Button label={'7'} click={this.addDigit}/>\n                <Button label={'8'} click={this.addDigit}/>\n                <Button label={'9'} click={this.addDigit}/>\n\n                <Button operation label={'*'} click={this.setOperation} />\n\n                <Button label={'4'} click={this.addDigit}/>\n                <Button label={'5'} click={this.addDigit}/>\n                <Button label={'6'} click={this.addDigit}/>\n\n                <Button operation label={'-'} click={this.setOperation} />\n\n                <Button label={'1'} click={this.addDigit}/>\n                <Button label={'2'} click={this.addDigit}/>\n                <Button label={'3'} click={this.addDigit}/>\n\n                <Button operation label={'+'} click={this.setOperation} />\n\n                <Button double label={'0'} click={this.addDigit}/>\n                <Button label={'.'} click={this.addDigit}/>\n\n                <Button operation label={'='} click={this.setOperation} />\n\n            </div>\n\n        )\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}